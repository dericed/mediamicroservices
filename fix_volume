#!/bin/bash
# this script takes one argument which is a video file. It evaluates the audio of the file, determines the difference needed to change the audio to -30dB as a mean_volume and then makes that adjustment to an output MXF file. The video track is simply copied.

# local variables
suffix="_voladj"

scriptdir=`dirname "$0"`
. "$scriptdir/mmvariables"
. "$scriptdir/mmfunctions"
[ ! -f "$scriptdir/mmvariables" -o ! -f "$scriptdir/mmfunctions" ] && { echo "Missing '$scriptdir/mmvariables' and/or '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

cleanup(){
	log -a "Process aborted"
	exit 1
}

trap cleanup SIGHUP SIGINT SIGTERM
log -b

[ $# = 0 ] && { report -wt "You must supply one or many arguments. Usage: $(basename $0) [ file1 file2 ... ] ."; exit 2 ;};

while [ "$*" != "" ] ; do
	input_movie="$1"
	name=`basename "$1"`
	get_codectagstring
	[ "$codec_tag_string" = "mpeg" ] && { ffmpeg_opts+=" -c:v copy -c:a pcm_s24le" ; extension="mxf" ; } ;
	[ "$codec_tag_string" = "mpeg" ] || { ffmpeg_opts+=" -c:v copy -c:a pcm_s24le" ; extension="mov" ; } ;
	output_movie="${input_movie%.*}${suffix}.${extension}"
	if [ -f "$output_movie" ] ; then
		report -wt "The intended output of `basename $0` already exists. Skipping for now. Please delete \"$output_movie\" and rerun or figure out why you are trying to do this."
	else
		get_volume_adjustment "$input_movie"
		if [ -n "$VOLADJ" ] ; then
			report -dt "Generating $output_movie ..."
			cmd="ffmpeg -i \"$input_movie\" $ffmpeg_opts -af volume=${VOLADJ}dB '$output_movie'"
			report -dt "Running: $cmd"
			eval "$cmd"
			report -dst "Done with ${name}."
		else
			report -dst "Integrated loudness for $name is ${integrated_loudness}dB. Reference is $reference. No adjustment is needed for ${name}, skipping."
		fi
	fi
	shift
done
log -e
