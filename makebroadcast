#!/bin/bash
# makebroadcast
# make broadcast version


# command-line options to set mediaid and original variables
while getopts l opt ; do
	case $opt in
		l)
		audioleft="Y"
		shift ;;
	esac
done

version="1.1"
# history
# v 1.1 change from mov output to mxf output, force all output to hd

scriptdir=`dirname "$0"`
. "$scriptdir/variables"
. "$scriptdir/functions"
[ ! -f "$scriptdir/variables" -o ! -f "$scriptdir/functions" ] && { echo "Missing '$scriptdir/variables' and/or '$scriptdir/functions'. Exiting." ; exit 1 ;};


[ "$audioleft" == "Y" ] && audiomapping=" -map_audio_channel 0:1:0:0:1:0 -map_audio_channel 0:1:0:0:1:1 "

[ "$#" = 0 ] && { ask_input ; once="y" ;};

while [ "$*" != ""  -o "$once" = "y" ] ; do
	once="n"
	[ "$#" != 0 ] && input="$1"
    [ -d "$input" ] && { outputdir="$input/objects/service" && logdir="$input/metadata/submissionDocumentation/logs" ;};
    [ -f "$input" ] && { outputdir=`dirname "$input"`"/service" && logdir="`dirname "$input"`/service/logs" ;};
    [ ! "$outputdir" ] && { outputdir="$input/objects/service" && logdir="$input/metadata/submissionDocumentation/logs" ;};
	find_input "$input"

	filename=`basename "$sourcefile"`
    mediaid=`basename "$input" | cut -d. -f1`
	
    servicefile="$outputdir/${mediaid%.*}.mxf"
    [ -s "$servicefile" ] && { report "${RED}WARNING $servicefile already exists, skipping transcode${NC}" ; shift ; continue ;};

    report "${GREEN}STATUS Transcoding for Omneon compliance.${NC}"
    ffmpeg_opts=" -r ntsc "
    #ffmpeg_opts+=" $audiomapping -ac 2 "

	# choose video encoding strategy, if source is xdcam 50 mb/sec ntsc then copy the video, else transcode
    get_codectagstring="$sourcefile"
	if [ "$codec_tag_string" = "xd5b" ] ; then
		ffmpeg_opts+=" -c:v copy"
	else
		ffmpeg_opts+=" -vf 'pad=ih*16/9:ih:(ow-iw)/2:(oh-ih)/2,scale=size=hd1080:interl=1,format=yuv422p,setsar=1/1,setdar=16/9,fps=fps=ntsc'"
		ffmpeg_opts+=" -c:v mpeg2video -top:v 1 -intra_vlc 1 -non_linear_quant 1 -q:v 1 -qmin 1 -qmax 8  -g 15 -b:v 50M -maxrate:v 50M -minrate:v 50M -bufsize 17825792 -rc_init_occupancy 17825792 -dc 10 -lmin QP2LAMBDA -flags +ildct+ilme+low_delay -ps 1"
	fi
	
	# add audio options
	ffmpeg_opts+=" -c:a pcm_s24le -ar 48k -ac 2"
	
	# set input options for ffmpeg
	inputoptions=" -y"
	# log ffmpeg process
	if [ "$logdir" != "" ] ; then
		mkdir -p "$logdir"
		export FFREPORT="file=${logdir}/%p_%t_$(basename $0)_${version}.txt"
		inputoptions+=" -report"
	fi
     
    mkdir -p "$outputdir"
    ffmpeg_command="ffmpeg $inputoptions -i '$sourcefile' $ffmpeg_opts '$servicefile'"
    report "${GREEN}Running: ${ffmpeg_command}${NC}"
	eval "$ffmpeg_command" 
    ffmpeg_err="$?"
    [ "$ffmpeg_err" -gt "0" ] && { report "${RED}ffmpeg failed with error ${ffmpeg_err}${NC}" && exit 1;};
    shift
done
